<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.zkejid.constructor</groupId>
    <artifactId>core</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0</version>

    <name>Zkejid's Constructor Framework</name>
    <description>Constructor - is a framework that supports modular development of applications.</description>
    <url>https://github.com/zkejidsconstructor/core</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <constructor.core.version>1.0.0</constructor.core.version>
        <constructor.javasdk.version>0.1.0-SNAPSHOT</constructor.javasdk.version>
        <junit.jupiter.version>5.6.2</junit.jupiter.version>
        <maven.surefire.plugin.version>3.0.0-M4</maven.surefire.plugin.version>
        <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
        <maven.source.plugin.version>3.2.0</maven.source.plugin.version>
        <maven.javadoc.plugin.version>3.2.0</maven.javadoc.plugin.version>
        <maven.gpg.plugin.version>1.6</maven.gpg.plugin.version>
        <maven.staging.plugin.version>1.6.8</maven.staging.plugin.version>
    </properties>

    <modules>
        <module>core-impl</module>
        <module>core-api</module>
    </modules>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>9</source>
                    <target>9</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
<!--                        TODO: fix issue with wrong version of javadoc -->
<!--                        <configuration>-->
<!--                            <javadocExecutable>/usr/lib/jvm/bellsoft-java13-i586/bin/javadoc</javadocExecutable>-->
<!--                        </configuration>-->
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>${maven.gpg.plugin.version}</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                        <configuration>
<!--                        get from local pom -->
                            <keyname>${gpg.keyname}</keyname>
                            <passphraseServerId>${gpg.keyname}</passphraseServerId>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>${maven.staging.plugin.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>false</autoReleaseAfterClose>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.zkejid.constructor</groupId>
                <artifactId>core-api</artifactId>
                <version>${constructor.core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zkejid.constructor</groupId>
                <artifactId>core-impl</artifactId>
                <version>${constructor.core.version}</version>
            </dependency>

            <dependency>
                <groupId>com.zkejid.constructor</groupId>
                <artifactId>javasdk-system-api</artifactId>
                <version>${constructor.javasdk.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zkejid.constructor</groupId>
                <artifactId>javasdk-system-impl</artifactId>
                <version>${constructor.javasdk.version}</version>
            </dependency>

            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <id>example-applications</id>
            <!-- Module contains dependencies to outer constructor parts and fails clean build -->
            <!-- You can build this module if dependent artifacts are in local repository -->
            <modules>
                <module>core-helloworld</module>
            </modules>
        </profile>
    </profiles>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Ivan Panfilov</name>
            <email>developer@zkejid.com</email>
            <organization>Zkejid</organization>
            <organizationUrl>https://github.com/zkejid</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git@github.com:zkejidsconstructor/core.git</connection>
        <developerConnection>scm:git:git@github.com:zkejidsconstructor/core.git</developerConnection>
        <url>https://github.com/zkejidsconstructor/core</url>
    </scm>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>
</project>